{"version":3,"file":"static/js/370.3ff60dd6.chunk.js","mappings":"kKASA,MAkFA,EAlFgDA,IAAe,IAAd,KAAEC,GAAMD,EACvD,MAAME,EAAQ,IAAIC,KACZC,EAAgB,IAAID,KAAKD,EAAMG,QAAQH,EAAMI,UAAY,KAmBzDC,EAjBqBC,MACzB,MAAMC,EAAeR,EAAKS,QAAOC,IAAQA,EAAIC,aACvCC,EAAoBZ,EAAKS,QAAOC,KAC/BA,EAAIC,YACF,IAAIT,KAAKQ,EAAIC,YAAcR,IAE9BU,EAAcb,EACjBS,QAAOC,GAAOA,EAAII,QAAU,MAC5BC,MAAK,CAACC,EAAGC,IAAMA,EAAEH,OAASE,EAAEF,SAE/B,MAAO,CACLI,SAAUV,EAAaW,MAAM,EAAG,GAChCC,UAAWR,EAAkBO,MAAM,EAAG,GACtCE,UAAWR,EAAYM,MAAM,EAAG,GACjC,EAGqBZ,GAExB,OACEe,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAeC,KAAK,gBAAeC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBAEJH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBE,SAAA,CAClCnB,EAAgBY,SAASS,OAAS,IACjCL,EAAAA,EAAAA,MAAA,WAASC,UAAU,yBAAyB,kBAAgB,mBAAkBE,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,MAAIE,GAAG,mBAAkBH,SAAC,uBAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SACGnB,EAAgBY,SAASW,KAAInB,IAC5BgB,EAAAA,EAAAA,KAAA,MAAAD,UACEH,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACC,GAAI,QAAQrB,EAAIkB,KAAML,UAAU,qBAAoBE,SAAA,EACxDC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,WAAUE,SAAEf,EAAIsB,QAChCN,EAAAA,EAAAA,KAAA,QAAMH,UAAU,WAAUE,SAAEf,EAAIuB,WAH3BvB,EAAIkB,WAWpBtB,EAAgBc,UAAUO,OAAS,IAClCL,EAAAA,EAAAA,MAAA,WAASC,UAAU,yBAAyB,kBAAgB,yBAAwBE,SAAA,EAClFC,EAAAA,EAAAA,KAAA,MAAIE,GAAG,yBAAwBH,SAAC,sBAChCC,EAAAA,EAAAA,KAAA,MAAAD,SACGnB,EAAgBc,UAAUS,KAAInB,IAC7BgB,EAAAA,EAAAA,KAAA,MAAAD,UACEH,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACC,GAAI,QAAQrB,EAAIkB,KAAML,UAAU,qBAAoBE,SAAA,EACxDC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,WAAUE,SAAEf,EAAIsB,QAChCV,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaE,SAAA,CAAC,gBACd,IAAIvB,KAAKQ,EAAIC,YAAauB,4BAJrCxB,EAAIkB,WAapBtB,EAAgBe,UAAUM,OAAS,IAClCL,EAAAA,EAAAA,MAAA,WAASC,UAAU,yBAAyB,kBAAgB,wBAAuBE,SAAA,EACjFC,EAAAA,EAAAA,KAAA,MAAIE,GAAG,wBAAuBH,SAAC,oBAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SACGnB,EAAgBe,UAAUQ,KAAInB,IAC7BgB,EAAAA,EAAAA,KAAA,MAAAD,UACEH,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACC,GAAI,QAAQrB,EAAIkB,KAAML,UAAU,qBAAoBE,SAAA,EACxDC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,WAAUE,SAAEf,EAAIsB,QAChCV,EAAAA,EAAAA,MAAA,QAAMC,UAAU,SAAQE,SAAA,CAAC,UAAGf,EAAII,cAH3BJ,EAAIkB,gBAWnB,C","sources":["components/Dashboard/TeaInsights.tsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tea } from '../../types/Tea';\nimport './TeaInsights.css';\n\ninterface TeaInsightsProps {\n  teas: Tea[];\n}\n\nconst TeaInsights: React.FC<TeaInsightsProps> = ({ teas }) => {\n  const today = new Date();\n  const thirtyDaysAgo = new Date(today.setDate(today.getDate() - 30));\n\n  const getRecommendations = () => {\n    const unbrewedTeas = teas.filter(tea => !tea.lastBrewed);\n    const notRecentlyBrewed = teas.filter(tea => {\n      if (!tea.lastBrewed) return false;\n      return new Date(tea.lastBrewed) < thirtyDaysAgo;\n    });\n    const highlyRated = teas\n      .filter(tea => tea.rating >= 4.5)\n      .sort((a, b) => b.rating - a.rating);\n\n    return {\n      unbrewed: unbrewedTeas.slice(0, 3),\n      forgotten: notRecentlyBrewed.slice(0, 3),\n      favorites: highlyRated.slice(0, 3)\n    };\n  };\n\n  const recommendations = getRecommendations();\n\n  return (\n    <div className=\"tea-insights\" role=\"complementary\">\n      <h3>Recommendations</h3>\n      \n      <div className=\"recommendations-grid\">\n        {recommendations.unbrewed.length > 0 && (\n          <section className=\"recommendation-section\" aria-labelledby=\"new-teas-heading\">\n            <h4 id=\"new-teas-heading\">Try Something New</h4>\n            <ul>\n              {recommendations.unbrewed.map(tea => (\n                <li key={tea.id}>\n                  <Link to={`/tea/${tea.id}`} className=\"tea-recommendation\">\n                    <span className=\"tea-name\">{tea.name}</span>\n                    <span className=\"tea-type\">{tea.type}</span>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </section>\n        )}\n\n        {recommendations.forgotten.length > 0 && (\n          <section className=\"recommendation-section\" aria-labelledby=\"forgotten-teas-heading\">\n            <h4 id=\"forgotten-teas-heading\">Rediscover These</h4>\n            <ul>\n              {recommendations.forgotten.map(tea => (\n                <li key={tea.id}>\n                  <Link to={`/tea/${tea.id}`} className=\"tea-recommendation\">\n                    <span className=\"tea-name\">{tea.name}</span>\n                    <span className=\"last-brewed\">\n                      Last brewed: {new Date(tea.lastBrewed!).toLocaleDateString()}\n                    </span>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </section>\n        )}\n\n        {recommendations.favorites.length > 0 && (\n          <section className=\"recommendation-section\" aria-labelledby=\"favorite-teas-heading\">\n            <h4 id=\"favorite-teas-heading\">Your Favorites</h4>\n            <ul>\n              {recommendations.favorites.map(tea => (\n                <li key={tea.id}>\n                  <Link to={`/tea/${tea.id}`} className=\"tea-recommendation\">\n                    <span className=\"tea-name\">{tea.name}</span>\n                    <span className=\"rating\">â˜… {tea.rating}</span>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TeaInsights;\n"],"names":["_ref","teas","today","Date","thirtyDaysAgo","setDate","getDate","recommendations","getRecommendations","unbrewedTeas","filter","tea","lastBrewed","notRecentlyBrewed","highlyRated","rating","sort","a","b","unbrewed","slice","forgotten","favorites","_jsxs","className","role","children","_jsx","length","id","map","Link","to","name","type","toLocaleDateString"],"sourceRoot":""}